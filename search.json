[
  {
    "objectID": "intro/bt.html",
    "href": "intro/bt.html",
    "title": "Bildungsstandards und Bildungstrend",
    "section": "",
    "text": "Zurück nach oben"
  },
  {
    "objectID": "intro/install/e2e.html",
    "href": "intro/install/e2e.html",
    "title": "End-to-end-tests im IQB-Testcenter",
    "section": "",
    "text": "Nach der Installation oder einer Aktualisierung der Anwendung, kann die Anwendung an bestimmten Stellen noch einmal seitens der Endnutzer*innen getestet werden. Diese Art der Testung nennt sich End-to-end-Testung oder auch Akzeptanztest. Sie soll sicherstellen, dass durch die Installation oder durch eine Anwendungsaktualisierung keine Fehler in der Anwendung entstanden sind, die zu Fehlfunktionen während eines Studienlaufs führen könnten. Es kann mit solchen Tests aber auch das individuell konfigurierte Verhalten einer Testung getestet werden. Hier könnten dann bspw. so klassische Fälle, wie die an Bedingungen geknüpfte Navigation (responses/presentation complete) zwischen den Aufgaben, getestet werden\nVor jeder Veröffentlichung einer neuen Version führt das IQB eigene Testungen durch, die die gewünschten Funktionen der Anwendung sicherstellen sollen. Hierzu zählen E2E-Testungen und Testungen in anderen Phasen des Software-Lebenszyklus (Unit-Test etc.). Anfangs wurden IQB-seitig E2E-Tests manuell durchgeführt, was sehr viel Zeit und Personal bindet. Nach und nach hat das IQB Testfälle automatisiert und in den Code der Anwendung integriert. Somit ist es allen Endnutzer*innen möglich diese Tests zu nutzen oder diese als Vorlage für eigene Testszenarien zu verwenden.\nEs ist mühselig und zeitraubend eigene Testszenarien zu entwickeln und zu erproben. Diese Arbeit möchte das IQB an dieser Stelle gerne abnehmen oder zumindest unterstützend einwirken. Am Ende steht es jedem frei, wie E2E-Tests für die eigene Instanz auszusehen haben. Es können hier ganz unterschiedliche Anforderungen bestehen, was wo und wie getestet werden soll. Falls die E2E-Testfälle des IQB genutzt werden sollen, werden hier Hinweise zu deren Verwendung gegeben. Sollen eigene Testungen entworfen werden, wollen wir zumindest auch hierzu Ratschläge aus eigenen Erfahrungen geben."
  },
  {
    "objectID": "intro/install/e2e.html#manuelles-testen",
    "href": "intro/install/e2e.html#manuelles-testen",
    "title": "End-to-end-tests im IQB-Testcenter",
    "section": "Manuelles Testen",
    "text": "Manuelles Testen\nVorteile\n\nsinnvoll bei selten ausgeführten Testungen und kleineren Studien\nrelativ schnelle Entwurfsphase, meist reicht ein Handlungsskript zur Durchführung\nPflege und Aktualisierung sind relativ einfach, da nur Skripte angepasst werden müssen\nkeine zusätzliche Software oder Programmierkenntnisse notwendig\n\nNachteile\n\nAusführung dauert lange und es wird Personal benötigt, bei größeren Studie erhöht sich der zeitliche Aufwand entsprechend\nAuswertung muss ebenfalls manuell erfolgen, das kostet Zeit\nSkripte und Auswertungen lassen sich schlecht organisieren und personalisieren (In welchem Verzeichnis liegt welches Skript und welche Auswertung gibt es dazu?)\nwenn oft ausgeführt, werden aus mangelnder Motivation gerne Abkürzungen genommen und damit eventuell entscheidende Stelle nicht wie im Skript vorgeschrieben geprüft\nalle Browser und Endgeräte die getestet werden sollen, müssen physisch vorhanden sein\n\n\n\n\n\n\n\nTipp\n\n\n\nEs sei an dieser Stelle erwähnt, dass es auch für das manuelle Testen Anbieter gibt, die die Organisation von Testskripten vereinfachen. Somit können viele Einzeldokumente bspw. mittels Word oder Excel vermieden werden. Hier sind einmal bspw. Testomat.io und Testbench genannt. Beide Anbieter bieten freie Zugänge an, die für kleinere Testungen ausreichend sind. Natürlich gibt es hier viele weitere Anbieter."
  },
  {
    "objectID": "intro/install/e2e.html#automatisiertes-testen",
    "href": "intro/install/e2e.html#automatisiertes-testen",
    "title": "End-to-end-tests im IQB-Testcenter",
    "section": "Automatisiertes Testen",
    "text": "Automatisiertes Testen\nVorteile\n\nsinnvoll bei häufig ausgeführten Testungen und größeren Studien\nAusführung ist schnell und homogen\ngute Auswertungsmöglichkeiten, da automatisch Testergebnisse gespeichert werden\nVerwaltung der Tests und zugehörige Auswertungen ist übersichtlich\nzu testende Endgeräte müssen nicht zwingend physisch vorhanden sein, es kann schnell gegen emulierte Geräte getestet werden\n\nNachteile\n\nEntwurfsphase benötigt Zeit\nPflege und Aktualisierung können je nach eingesetzter Software aufwändig werden\nzusätzliche Software notwendig und je nach Einsatz Programmierkenntnisse im kleineren Umfang notwendig\n\nIst eine Entscheidung für das automatisierte Testen gefallen, kann das IQB nachfolgend Software vorstellen, die für den Testentwurf und zur Testdurchführung genutzt werden könnten. Der Markt für Software zum automatisierten E2E-Testen ist riesig und jeder Anbieter hat Vor- und Nachteile. Da das IQB bereits den Großteil seiner Testszenarien automatisiert hat, wollen wir an dieser Stelle gerne das Werkzeug Cypress zur Integration von E2E-Tests empfehlen. Es ist schnell einsatzbereit und unkompliziert zu bedienen. Die Testschritte können in JavaScript oder TypeScript geschrieben werden.\nHier ein kleines Beispiel, wie ein sehr einfacher Test mit Cypress aussehen könnte:\n//Testfall Beispiel\ndescribe('Check Google', () =&gt; {\n\n    //1.Testschritt: Prüfe ob Google geladen werden kann\n    it('Öffne Google', () =&gt; {\n        //Öffne Seite\n        cy.visit(`www.google.com`);\n        //Erwartungsauswertung: Konnte Seite geladen werden, \n        //dann sollte sie \"Google\" enthalten\n        cy.contains('Google')\n            .should('exist');\n    });\n\n    //2.Testschritt: Tue noch etwas auf der Google Seite\n    it('Öffne Google', () =&gt; {\n        \n        //Tue etwas....\n    });\n});"
  },
  {
    "objectID": "intro/install/e2e.html#vorbereitungen",
    "href": "intro/install/e2e.html#vorbereitungen",
    "title": "End-to-end-tests im IQB-Testcenter",
    "section": "Vorbereitungen",
    "text": "Vorbereitungen\n\nEntwicklungsumgebung (IDE): Um die Bestandteile der Anwendung adäquat verwenden und sichten zu können, wird eine IDE benötigt. Hier genannt sei bspw. MS-Visual Studio Code.\nNode.js: Zur Installation von Cypress wird der Node Package Manager (npm) verwendet.\nGit: Wird zum Duplizieren des Testcenter Repositories benötigt.\nCypress in Version 13.3.3: Hinweise zur Installation sind hier zu finden."
  },
  {
    "objectID": "intro/install/e2e.html#cypress-starten",
    "href": "intro/install/e2e.html#cypress-starten",
    "title": "End-to-end-tests im IQB-Testcenter",
    "section": "Cypress starten",
    "text": "Cypress starten\n\nStarten der IDE\nSpiegeln (clonen) des Testcenter GitHub-Repos\nÖffnen des gespiegelten Ordners mit der IDE\nTerminal öffnen und den Befehl: make test-system eingeben (es dürfen keine Fehler angezeigt werden), wenn erfolgreich ausgeführt, öffnet sich die Cypress Oberfläche\n“E2E Testing” in der Cypress Oberfläche auswählen\nTestBrowser auswählen"
  },
  {
    "objectID": "intro/install/e2e.html#cypress-tests-ausführen",
    "href": "intro/install/e2e.html#cypress-tests-ausführen",
    "title": "End-to-end-tests im IQB-Testcenter",
    "section": "Cypress Tests ausführen",
    "text": "Cypress Tests ausführen\nNachdem die vorherigen Schritte abgeschlossen sind, ist eine Liste aller bereits angelegten Testfälle zu sehen. Da die Anwendung Testcenter vor jeder Veröffentlichung vom IQB getestet wird, sind für Endnutzer*innen nicht alle Testfälle interessant. Es sind ehr Testfälle interessant, die Funktionen testen, die direkt mit der Studiendurchführung zu tun haben. Hier wäre als klassisches Beispiel die bedingte Navigation (responses/ presentation complete) zu nennen. Nachfolgend werden die Testfälle aufgezeigt, die von Endnutzer*innen für ihre Konfiguration der Testdateien genutzt werden könnten.\n\n\n\n\n\n\nHinweis\n\n\n\nEinige Testfälle sind gruppiert in Ordner.\n\n\nSession-Management/hot-restart-mode und Session-Management/hot-return-mode\nHier werden die Grundfunktionen der Modi: hot-restart und hot-return getestet. In diesem Fall, ob Antworten und Logs gespeichert werden und ob sich die Modi bzgl. Anmeldung so verhalten, wie vorgesehen:\n\nhot-restart: Bei erneuter Anmeldung wird eine neue Person angenommen und der Test wird neu gestartet\nhot-return: Bei erneuter Anmeldung wird die selbe Testperson angenommen und der Test wird fortgesetzt\n\nSession-Management/time-restrictions\nEs wird die Funktion zeitlicher Beschränkungen in Testheftblöcken getestet.\nTest-Controller/RunHotRestart und Test-Controller/RunHotReturn\nEs werden alle hier gelisteten Funktionen der beide Modi getestet (ausgenommen der bereits im Session-Management getesteten Funktionen).\n\n\n\n\n\n\nHinweis\n\n\n\nDie Testschritte sind so geschrieben, dass relativ einfach herauszulesen ist was diese Schritte tun, also was damit getestet wird."
  },
  {
    "objectID": "intro/install/e2e.html#wo-ist-der-testcode-zu-finden",
    "href": "intro/install/e2e.html#wo-ist-der-testcode-zu-finden",
    "title": "End-to-end-tests im IQB-Testcenter",
    "section": "Wo ist der Testcode zu finden?",
    "text": "Wo ist der Testcode zu finden?\nDer Testcode ist im Projektverzeichnis: /e2e/cypress/e2e zu finden. Die Struktur der Testfälle ist dann genau so zu sehen wie in der Cypress-Oberfläche. Der Testcode kann hier bei Bedarf erweitert oder angepasst werden und ist dann direkt in der Cypress-Oberfläche ausführbar. Falls andere Beispielaufgaben eingebunden werden sollen, sind diese unter: /sampledata/system-test zu hinterlegen. Anschließend müssen sie in der Klasse: WorkspaceInitializer.class.php eingetragen werden. Es empfiehlt sich daraufhin das laufende Test-System noch einmal zu stoppen und erneut zu starten mit make test-system. Hierbei werden die neuen Daten der Datenbank hinzugefügt."
  },
  {
    "objectID": "intro/install/load-test.html",
    "href": "intro/install/load-test.html",
    "title": "Lastverhalten",
    "section": "",
    "text": "Bei der technischen Vorbereitung einer Lernstandserhebung muss abgeschätzt werden, wie viele Schülerinnen und Schüler mit einer bestimmten Software-/Hardwarekonstellation, ggf. verteilt über Tage oder Wochen, den fraglichen Test absolvieren können. Diese Abschätzung führt dann in Folge zu Entscheidungen auf institutioneller (welche Abteilungen/Firmen müssen eingebunden werden?), finanzieller (Server kosten Geld!) und administrativer Ebene (wie groß kann/muss das Zeitfenster sein?). Es müssen Verträge geschlossen werden, Schulen frühzeitig informiert und Serversysteme installiert und konfiguriert werden.\nUnter einem Lasttest versteht man die Belastbarkeit auf der Serverseite. Klar muss hierbei sein, dass die Verbindungsqualität sowie die Infrastruktur in der Schule sowie die Leistungsfähigkeit der Endgeräte ausgeblendet werden. Ein Lasttest muss also hier die Belastbarkeit einer Testcenter-Installation aus Sicht der Verantwortlichen einer Lernstandserhebung ermitteln. Da es keine Standard-Lernstandserhebung gibt, muss ein Lasttest stets konkret bezogen auf die Datenmenge eines bestimmten Leistungstests bzw. einer Befragung sein. Außerdem dienen Lasttests der Verbesserung der Programmierung, denn Performance und Stabilität sind Qualitätsmerkmale einer Software. Hier müssen dann verschiedene Szenarien vorgesehen werden.\n\n\n\nDie kritische Phase bei einer Lernstandserhebung mit dem Testcenter ist das Laden der Testinhalte. Um Verzögerungen während des Testablaufs zu verhindern (dies würde die Vergleichbarkeit der Ergebnisse gefährden), müssen die Testinhalte (auch Bilder, Audio-/Videosequenzen) geladen werden, bevor der Testperson etwas präsentiert wird. Das Testcenter kann jedoch auch so konfiguriert werden, dass die ersten Seiten angezeigt werden können, nachdem der erste Block geladen wurde (lazy loading). Diese Ladestrategie muss jedoch mit Bedacht gewählt werden: Es muss genügend Zeit im ersten Block zugebracht werden, damit das Betreten des nächsten Blockes nicht verzögert wird.\nAlle Testinhalte sollen also zu Beginn vom Server geladen werden. Vorher muss noch eine Anmeldung am Testsystem erfolgreich sein, damit das richtige Testheft zugewiesen wird und die Antworten der richtigen Person zugeordnet werden. Nach dem Ladevorgang präsentiert der Browser nacheinander die Aufgaben, wobei die Antworten bzw. der Status der Bearbeitung sofort an den Server geschickt werden. Mit Blick auf den Lasttest stellt jedoch die Phase der Bearbeitung und des Speicherns der Antworten einen relativ geringen Anteil an der Belastung des Servers dar. Im Vergleich zum anfänglichen Laden sind das sehr kleine Datenpakete. Für einen Lasttest wird also die anfängliche Ladephase simuliert: Aufruf der Startseite, Eingeben der Login-Daten, Laden der Testinhalte.\nDie Testinhalte bestehen aus mehreren Dateien. Technisch ist jedoch sichergestellt, dass pro Testperson nur eine Datei gleichzeitig abgerufen wird - Inhalte werden also nacheinander und nicht parallel abgerufen. Dieses serielle Laden verhindert, dass wenige Testpersonen viele parallele Ladevorgänge auslösen und früh alles geladen haben, andere Testpersonen jedoch durch die Begrenzung der Netzverbindungen keine Ladevorgänge auslösen können und sehr lange auf die Testinhalte warten.\n\n\n\nDie Serverkapazität wird zum Schluss über die Anzahl von Testpersonen ausgedrückt, die gleichzeitig einen Test starten und nach einer zumutbaren Wartezeit mit der Beantwortung beginnen können. Es gibt also zwei relevante und miteinander verbundene Indikatoren: Anzahl Testpersonen und Ladezeit. Je mehr Testpersonen einen Test starten, desto größer ist die Ladezeit. Das bedeutet praktisch, dass für mehrere Testpersonen-Szenarien (500, 1.000, 2.000 usw.) die Ladezeiten ermittelt werden und dann in der Gegenüberstellung bewertet wird, bei welcher Anzahl der Testpersonen die Ladezeit noch akzeptabel ist.\nEin Lasttest weist üblicherweise außerdem die Fehlerrate aus. Mit steigender Last erhöht sich der Anteil der gescheiterten Datei-Abrufe. Wenn der Server überlastet ist, lehnt er weitere Verbindungen ab. Die Programmierung des Testcenters versucht die Verbindungsaufnahme mehrfach (5 Wiederholungen mit progressiver Verzögerung), und ein Fehler wird erst dann an die Testperson gemeldet, wenn alle Versuche fehlgeschlagen sind. Dann kann die Testperson ggf. nach einer Pause mit einem Neuladen der Webseite den Ladevorgang neu anstoßen. Als Fehler gilt hier, wenn alle 5 Ladeversuche gescheitert sind und die Testperson eine Fehlermeldung bekommt.\nNach der Ermittlung der Werte für viele Testpersonen werden diese dann über den Median zu einem Wert zusammengefasst. Der Median eignet sich besser als der Mittelwert, weil die Wirkung extremer Messwerte (Ausreißer) abgeschwächt wird."
  },
  {
    "objectID": "intro/install/load-test.html#ziel",
    "href": "intro/install/load-test.html#ziel",
    "title": "Lastverhalten",
    "section": "",
    "text": "Bei der technischen Vorbereitung einer Lernstandserhebung muss abgeschätzt werden, wie viele Schülerinnen und Schüler mit einer bestimmten Software-/Hardwarekonstellation, ggf. verteilt über Tage oder Wochen, den fraglichen Test absolvieren können. Diese Abschätzung führt dann in Folge zu Entscheidungen auf institutioneller (welche Abteilungen/Firmen müssen eingebunden werden?), finanzieller (Server kosten Geld!) und administrativer Ebene (wie groß kann/muss das Zeitfenster sein?). Es müssen Verträge geschlossen werden, Schulen frühzeitig informiert und Serversysteme installiert und konfiguriert werden.\nUnter einem Lasttest versteht man die Belastbarkeit auf der Serverseite. Klar muss hierbei sein, dass die Verbindungsqualität sowie die Infrastruktur in der Schule sowie die Leistungsfähigkeit der Endgeräte ausgeblendet werden. Ein Lasttest muss also hier die Belastbarkeit einer Testcenter-Installation aus Sicht der Verantwortlichen einer Lernstandserhebung ermitteln. Da es keine Standard-Lernstandserhebung gibt, muss ein Lasttest stets konkret bezogen auf die Datenmenge eines bestimmten Leistungstests bzw. einer Befragung sein. Außerdem dienen Lasttests der Verbesserung der Programmierung, denn Performance und Stabilität sind Qualitätsmerkmale einer Software. Hier müssen dann verschiedene Szenarien vorgesehen werden."
  },
  {
    "objectID": "intro/install/load-test.html#beschreibung-des-ladeverhaltens",
    "href": "intro/install/load-test.html#beschreibung-des-ladeverhaltens",
    "title": "Lastverhalten",
    "section": "",
    "text": "Die kritische Phase bei einer Lernstandserhebung mit dem Testcenter ist das Laden der Testinhalte. Um Verzögerungen während des Testablaufs zu verhindern (dies würde die Vergleichbarkeit der Ergebnisse gefährden), müssen die Testinhalte (auch Bilder, Audio-/Videosequenzen) geladen werden, bevor der Testperson etwas präsentiert wird. Das Testcenter kann jedoch auch so konfiguriert werden, dass die ersten Seiten angezeigt werden können, nachdem der erste Block geladen wurde (lazy loading). Diese Ladestrategie muss jedoch mit Bedacht gewählt werden: Es muss genügend Zeit im ersten Block zugebracht werden, damit das Betreten des nächsten Blockes nicht verzögert wird.\nAlle Testinhalte sollen also zu Beginn vom Server geladen werden. Vorher muss noch eine Anmeldung am Testsystem erfolgreich sein, damit das richtige Testheft zugewiesen wird und die Antworten der richtigen Person zugeordnet werden. Nach dem Ladevorgang präsentiert der Browser nacheinander die Aufgaben, wobei die Antworten bzw. der Status der Bearbeitung sofort an den Server geschickt werden. Mit Blick auf den Lasttest stellt jedoch die Phase der Bearbeitung und des Speicherns der Antworten einen relativ geringen Anteil an der Belastung des Servers dar. Im Vergleich zum anfänglichen Laden sind das sehr kleine Datenpakete. Für einen Lasttest wird also die anfängliche Ladephase simuliert: Aufruf der Startseite, Eingeben der Login-Daten, Laden der Testinhalte.\nDie Testinhalte bestehen aus mehreren Dateien. Technisch ist jedoch sichergestellt, dass pro Testperson nur eine Datei gleichzeitig abgerufen wird - Inhalte werden also nacheinander und nicht parallel abgerufen. Dieses serielle Laden verhindert, dass wenige Testpersonen viele parallele Ladevorgänge auslösen und früh alles geladen haben, andere Testpersonen jedoch durch die Begrenzung der Netzverbindungen keine Ladevorgänge auslösen können und sehr lange auf die Testinhalte warten."
  },
  {
    "objectID": "intro/install/load-test.html#indikatoren",
    "href": "intro/install/load-test.html#indikatoren",
    "title": "Lastverhalten",
    "section": "",
    "text": "Die Serverkapazität wird zum Schluss über die Anzahl von Testpersonen ausgedrückt, die gleichzeitig einen Test starten und nach einer zumutbaren Wartezeit mit der Beantwortung beginnen können. Es gibt also zwei relevante und miteinander verbundene Indikatoren: Anzahl Testpersonen und Ladezeit. Je mehr Testpersonen einen Test starten, desto größer ist die Ladezeit. Das bedeutet praktisch, dass für mehrere Testpersonen-Szenarien (500, 1.000, 2.000 usw.) die Ladezeiten ermittelt werden und dann in der Gegenüberstellung bewertet wird, bei welcher Anzahl der Testpersonen die Ladezeit noch akzeptabel ist.\nEin Lasttest weist üblicherweise außerdem die Fehlerrate aus. Mit steigender Last erhöht sich der Anteil der gescheiterten Datei-Abrufe. Wenn der Server überlastet ist, lehnt er weitere Verbindungen ab. Die Programmierung des Testcenters versucht die Verbindungsaufnahme mehrfach (5 Wiederholungen mit progressiver Verzögerung), und ein Fehler wird erst dann an die Testperson gemeldet, wenn alle Versuche fehlgeschlagen sind. Dann kann die Testperson ggf. nach einer Pause mit einem Neuladen der Webseite den Ladevorgang neu anstoßen. Als Fehler gilt hier, wenn alle 5 Ladeversuche gescheitert sind und die Testperson eine Fehlermeldung bekommt.\nNach der Ermittlung der Werte für viele Testpersonen werden diese dann über den Median zu einem Wert zusammengefasst. Der Median eignet sich besser als der Mittelwert, weil die Wirkung extremer Messwerte (Ausreißer) abgeschwächt wird."
  },
  {
    "objectID": "intro/install/load-test.html#warum-reicht-nicht-ein-standard-test-für-webserver",
    "href": "intro/install/load-test.html#warum-reicht-nicht-ein-standard-test-für-webserver",
    "title": "Lastverhalten",
    "section": "Warum reicht nicht ein Standard-Test für Webserver?",
    "text": "Warum reicht nicht ein Standard-Test für Webserver?\nMan könnte annehmen, dass es sich beim IQB-Testcenter um eine Webseite handelt und einen üblichen Lasttest beauftragen. Auch hier wird berichtet, wieviele Personen gleichzeitig Zugriff haben können. Aus folgenden Gründen sind Standard-Tests jedoch problematisch:\n\nDas Besucherverhalten wird als lose, teilweise zufällige Abfolge von Navigationsentscheidungen simuliert. Seiten werden oft vollständig geladen, manchmal wird aber auch das Laden abgebrochen durch eine andere Navigation. Das ist beim Testcenter eigenen Lasttest nicht der Fall.\nEs wird pro Besucher zugelassen, dass mehrere Ladevorgänge parallel angestoßen werden (eine Webseite hat üblicherweise mehrere Elemente wie z. B. Bilder). Wenn dies passiert, belastet ein Besucher den Server mehrfach. Das dieses Verhalten beim Testcenter nicht vorgesehen ist, wird durch dieses Testverhalten die Kapazität des Testcenters systematisch unterschätzt.\nEs wird ein praktisch unendlich aktiver Besucher simuliert. Dadurch kann nicht ermittelt werden, wann ein Testheft geladen wurde. Weiterhin behindert eine einmal gestartete Testperson folgende Teilnehmer - es gibt keine Entlastung nach der Ladephase zugunsten anderer Testpersonen. Dadurch wird die Kapazität des Testcenters systematisch unterschätzt und es fehlt die wichtige Information über die Ladezeit."
  },
  {
    "objectID": "intro/install/load-test.html#eigenprogrammierung",
    "href": "intro/install/load-test.html#eigenprogrammierung",
    "title": "Lastverhalten",
    "section": "Eigenprogrammierung",
    "text": "Eigenprogrammierung\nLeider sind die verfügbaren Open Source-Systeme zum Bauen eines Lasttests (z. B. Locust, Tsung) stets auf den oben beschriebenen Standardfall ausgerichtet. Es sind viele Zufallsfaktoren eingebaut, so dass sich ein streng serielles Laden kaum realisieren lässt. Das IQB verwendet daher eine eigene Programmierung für Lasttests, die die Aufrufe in der Startphase korrekt nachstellt:\n\nAnmeldung am Testsystem; für alle folgenden Requests wird das bei der Anmeldung erhaltene Auth-Token verwendet\nNach erfolgreicher Anmeldung Abruf der Daten: Testheft (also Liste der erforderlichen Dateien)\nAbruf der Dateien\n\nDer Server, der geprüft wird, hat eine definierte Ausgangssituation. Das bedeutet, dass stets dieselben Testinhalte bereit stehen und sich noch niemand vorher angemeldet hat. Für jede Testperson wird ein separates Login bereitgestellt. Wenn also eine Last von 10.000 Testpersonen erzeugt werden soll, hält der Server 10.000 Logins bereit, die die ausführende Testsuite benutzt.\nDer Server, der die Last erzeugt, muss hierfür sehr viele Prozesse gleichzeitig managen können. Diese Bedingung erfüllt die genutzte Computersprache Go hinreichend.\nIm Moment ist die Programmierung auf die Anforderungen des IQB ausgerichtet. Nach der Diskussion mit Fachleuten auf dem Gebiet des Lasttests und weiterer Erprobung würden wir die Software so ausbauen, dass sie einfach durch Dritte installiert und genutzt werden kann (MIT-Lizenz). Auf der Liste der gewünschten Features stehen noch Einbeziehung von Daten aus dem Monitoring des angegriffenen Systems (Docker stats bzw. Informationen über CPU-Auslastung, RAM usw.), Automatisierung des Uploads des Testcenter-Content und einfache Parametrisierung der Testläufe."
  },
  {
    "objectID": "intro/install/load-test.html#szenarien",
    "href": "intro/install/load-test.html#szenarien",
    "title": "Lastverhalten",
    "section": "Szenarien",
    "text": "Szenarien\nEs werden zwei Parameter der Testung variiert:\n\ngleichzeitige Anzahl der Testpersonen: 100, 1.000, 2.000, 5.000, 10.000, 20.000; hierbei erfolgt real eine Streckung der Login-Anfragen: maximal 100 Anmeldungen pro Sekunde (sonst wird ein DoS-Angriffszenario simuliert)\nGesamtgröße des Content: klein (70 kB), mittel (20 MB), groß (38 MB)\n\nDas IQB betreibt zwei konstante Server, damit die Ergebnisse der Lasttests vergleichbar sind. Hier ist das Ziel nicht, eine spezifische Lernstandserhebung vorzubereiten, sondern Versionen des Testcenters auf Veränderungen des Lastverhaltens zu prüfen. Die Serverausstattung wird bewusst nicht variiert."
  },
  {
    "objectID": "intro/install/load-test.html#strategien-bei-unbefriedigenden-lasttest-ergebnissen",
    "href": "intro/install/load-test.html#strategien-bei-unbefriedigenden-lasttest-ergebnissen",
    "title": "Lastverhalten",
    "section": "Strategien bei unbefriedigenden Lasttest-Ergebnissen",
    "text": "Strategien bei unbefriedigenden Lasttest-Ergebnissen\nUm die Lücke zwischen der erforderlichen Kapazität und den ermittelten Werten zu verringern, bieten sich folgende Strategien an:\n\nVerringerung der Testheft-Größe:\n\nSind alle Bilder, Audio- und Videosequenzen unverzichtbar?\nKönnte man die Auflösung von Bildern, Audio- und Videosequenzen verringern bei vertretbarem Qualitätsverlust?\nKönnte man ein Testheft aufteilen in mehrere Testhefte?\n\nStreckung des Testzeitraumes: Bereits eine Teilung der Testpopulation und dann Versatz um eine (Unterrichts-)Stunde würde die tägliche Kapazität verdoppeln; entsprechend wäre der Gewinn bei der Ausdehnung der Testung auf eine Woche\n\nBevor man nun die teure Serverkapazität erhöht sollte man sicherstellen, dass die anderen Infrastruktur-Komponenten noch Reserven haben. Wenn die Anbindung der Schulen an das Internet, die Verteilung in der Schule (WLAN-Access-Points) sowie die Endgeräte keinen Engpass bilden, sollten mehr Server bereitgestellt werden:\n\nAufsetzen mehrerer getrennter Server jeweils mit einer Testcenter-Installation; Aufteilen der Testpopulation mit fixer Zuweisung des Servers; späteres manuelles Zusammenführen der Antwortdaten,\n(derzeit noch nicht verfügbar) Installation des Testcenters auf einem System mit Lastverteilung (z. B. Kubernetes), wodurch die Administration erleichtert wird; Achtung: Auch in diesem Fall muss eine höhere Serverausstattung bereitgestellt werden (die Synchronisation der Datenbank-Inhalte erzeugt zusätzliche Last)."
  },
  {
    "objectID": "intro/install/load-test.html#vergleich-mit-version-14",
    "href": "intro/install/load-test.html#vergleich-mit-version-14",
    "title": "Lastverhalten",
    "section": "Vergleich mit Version 14",
    "text": "Vergleich mit Version 14\n\nLastvergleich Testcenter Versionen 14 und 15, Dezember 2023\n\n\nGröße Content\n Users\nVersion\nLadezeit Median sec\nErrors\n\n\n\n\n70 kB\n \n \n  \n\n\n\n \n100\n \n \n \n\n\n \n \n14.13\n13\n0\n\n\n \n \n15-rc9\n4\n0\n\n\n \n500\n \n \n \n\n\n \n \n14.13\n53\n0\n\n\n \n \n15-rc9\n8\n0\n\n\n \n1.000\n \n \n \n\n\n \n \n14.13\n102\n0\n\n\n \n \n15-rc9\n17\n0\n\n\n \n2.000\n \n \n \n\n\n \n \n14.13\n232\n0\n\n\n \n \n15-rc9\n23\n0\n\n\n \n5.000\n \n \n \n\n\n \n \n14.13\n355\n2.008\n\n\n \n \n15-rc9\n46\n0\n\n\n \n10.000\n \n \n \n\n\n \n \n15-rc9\n96\n25\n\n\n20 MB\n \n \n  \n\n\n\n \n100\n \n \n \n\n\n \n \n14.13\n20\n0\n\n\n \n \n15-rc9\n4\n0\n\n\n \n500\n \n \n \n\n\n \n \n14.13\n91\n0\n\n\n \n \n15-rc9\n10\n0\n\n\n \n1.000\n \n \n \n\n\n \n \n14.13\n163\n0\n\n\n \n \n15-rc9\n12\n0\n\n\n \n2.000\n \n \n \n\n\n \n \n14.13\n378\n3\n\n\n \n \n15-rc9\n18\n0\n\n\n \n5.000\n \n \n \n\n\n \n \n14.13\n567\n2.274\n\n\n \n \n15-rc9\n53\n352\n\n\n \n10.000\n \n \n \n\n\n \n \n15-rc9\n136\n1.337\n\n\n38 MB\n \n \n  \n\n\n\n \n100\n \n \n \n\n\n \n \n14.13\n94\n0\n\n\n \n \n15-rc9\n5\n0\n\n\n \n500\n \n \n \n\n\n \n \n14.13\n379\n0\n\n\n \n \n15-rc9\n11\n112\n\n\n \n1.000\n \n \n \n\n\n \n \n14.13\n787\n2\n\n\n \n \n15-rc9\n17\n91\n\n\n \n2.000\n \n \n \n\n\n \n \n14.13\n1.433\n320\n\n\n \n \n15-rc9\n21\n1.704\n\n\n \n5.000\n \n \n \n\n\n \n \n15-rc9\n197\n3.314"
  },
  {
    "objectID": "intro/install/configuration.html",
    "href": "intro/install/configuration.html",
    "title": "Testcenter Konfiguration",
    "section": "",
    "text": "Eine Testcenter-Instanz wird nicht aus einer zentralen Stelle heraus konfiguriert, sondern bietet an verschiedenen Stellen die Möglichkeit unterschiedliche Konfigurationen vorzunehmen."
  },
  {
    "objectID": "intro/install/configuration.html#version",
    "href": "intro/install/configuration.html#version",
    "title": "Testcenter Konfiguration",
    "section": "Version",
    "text": "Version\nVERSION=15.1.8\nDie verwendete Testcenter-Version. Wird hier eine höhere (verfügbare) Version eingetragen, so werden beim nächsten Start entsprechen images von DockerHub gezogen und in der Folge die Datenbank angepasst. Dies sollte allerdings niemals von Hand erfolgen, sondern mittels der update.sh, da diese auch die compose-files usw. aktualisiert. Downgrades auf eine vergangene Version sollten grundsätzlich vermieden werden."
  },
  {
    "objectID": "intro/install/configuration.html#grundsätzliche-netzwerkeinstellungen.",
    "href": "intro/install/configuration.html#grundsätzliche-netzwerkeinstellungen.",
    "title": "Testcenter Konfiguration",
    "section": "Grundsätzliche Netzwerkeinstellungen.",
    "text": "Grundsätzliche Netzwerkeinstellungen.\nHOSTNAME=localhost\nServername, z. B. ìqb-testcenter4.de. Wenn Sie eine www-subdomain als Alternativen Namen verwenden wollen, geben Sie das www nicht mit an - es wird eine automatische Weiterleitung eingerichtet.\nTLS_ENABLED=no\nSoll TLS (https) verwendet werden? Wenn ja, sollten sie entsprechende Zertifikate hinterlegen (siehe hier). Der default ist hier yes.\nPORT=80\nTLS_PORT=443\nDer Port auf dem das Testcenter laufen soll. Ist TLS_ENABLED gesetzt wird der TLS_PORT genutzt, ansonsten wird der PORT genutzt."
  },
  {
    "objectID": "intro/install/configuration.html#sicherheit",
    "href": "intro/install/configuration.html#sicherheit",
    "title": "Testcenter Konfiguration",
    "section": "Sicherheit",
    "text": "Sicherheit\nPASSWORD_SALT=t\nSalt für verwendete admin-passwörter. Achtung: Ändern Sie diese Enstellung nicht mehr, nachdem Sie die Applikation bereits einmal gestartet haben, sonst können Sie sicht nicht mehr einloggen."
  },
  {
    "objectID": "intro/install/configuration.html#services",
    "href": "intro/install/configuration.html#services",
    "title": "Testcenter Konfiguration",
    "section": "Services",
    "text": "Services\n\nDatenbank Connection\nMYSQL_ROOT_PASSWORD=secret_root_pw\nMYSQL_DATABASE=iqb_tba_testcenter\nMYSQL_USER=iqb_tba_db_user\nMYSQL_PASSWORD=iqb_tba_db_password\nVerbindungen zur Datenbank. Wird normalerweise bei der Installation gesetzt und nicht mehr angefasst.\n\n\nBroadcasting Service\nBROADCAST_SERVICE_ENABLED=true\nDer Broadcasting-Service ist ein optionaler Zusatzservice, der Websocket-Verbindungen ermöglicht. Sollten ihre Server oder Teilnehmer aus irgendwelchen Gründen Websockets nicht verwenden wollen oder können, können Sie ihn hier abschalten.\n\n\nFile Service\nFILE_SERVICE_ENABLED=true\nDer File-Service übernimmt die Auslieferung der eigentlichen Testinhalte. Ihn abzuschalten und die Inhalte mit dem Backend ausliefern verschlechtert die Performance des Testcenters maßgeblich.\n\n\nCache Service\nCACHE_SERVICE_INCLUDE_FILES=no\nCACHE_SERVICE_RAM=1073741824\nDer Cache-Service cached Authentifizierungen für den File-Service, sodass beim Laden der Testinhalte daas Backend nicht mehr verwendet werden muss.\nEr kann aber auch verwendet werden, um die Testinhalte selbst im Arbeitsspeicher des Servers zu cachen. Dazu ist dieser parameter auf yes zu setzen und eine entsprechende Menge dafür freigegebenen Arbeitsspeicher (in Byte) anzugeben. Es liegen bisher wenig Erkenntnisse über Performance-Gewinn, Fehleranfälligkeit usw. dieser Option vor, daher ist sie Standardmäßig ausgeschaltet."
  },
  {
    "objectID": "intro/install/configuration.html#weitere-netzwerkeinstellungen",
    "href": "intro/install/configuration.html#weitere-netzwerkeinstellungen",
    "title": "Testcenter Konfiguration",
    "section": "Weitere Netzwerkeinstellungen",
    "text": "Weitere Netzwerkeinstellungen\nDOCKER_DAEMON_MTU=1500\nMTU wert des Netzwerks. Außer in bestimmten Server-Umgebungen ist er 1500.\nDOCKERHUB_PROXY=''\nSie verwenden einen lokalen Proxy für DockerHub? Dann können Sie ihn hier angeben.\nRESTART_POLICY=no\nRestart-Policy der Docker-Container: no, always, on-failure, unless-stopped"
  },
  {
    "objectID": "intro/install/configuration.html#development-parameters",
    "href": "intro/install/configuration.html#development-parameters",
    "title": "Testcenter Konfiguration",
    "section": "Development Parameters",
    "text": "Development Parameters\nDie folgenden Parameter können für Experimente, in Debug-Situationen usw. eingesetzt werden. Sie sollten im Normalbetrieb aber nie im .env File auftauchen:\nOVERWRITE_INSTALLATION=\"no\"\nBei Neustart wird die Installation neu aufgesetzt. Alle Daten, User, Testinhalte und Konfigurationen gehen mit Neustart verloren.\nSKIP_READ_FILES=\"no\"\nDas (Neu-)Einlesen der Dateien beim Start wird übersprungen. Damit kann der Systemstart deutlich beschleunigt werden, die Datenintegrität ist jedoch nicht mehr gewahrt. Ab Testcenter 15.2.0 werden ohnehin nur noch Workspaces neu eingelesen, die sich verändert haben. Die Einstellung ist damit beinahe obsolet.\nSKIP_DB_INTEGRITY=\"no\"\nDer Integritätscheck der Datenbank beim Starten wird übersprungen. Nur dann nützlich, wenn man ein kaputtes System unbedingt noch einmal hochfahren will.\nNO_SAMPLE_DATA=\"no\"\nDas Anlegen des Beispiel-Arbeitsbereiches wird bei einer Neuinstallation übersprungen. Wird ein bereits vorhandenes System gestartet, hat diese Einstellung keine Auswirkungen."
  },
  {
    "objectID": "intro/install/configuration.html#ändern-der-standard-texte",
    "href": "intro/install/configuration.html#ändern-der-standard-texte",
    "title": "Testcenter Konfiguration",
    "section": "Ändern der Standard-Texte",
    "text": "Ändern der Standard-Texte\nDie meisten Texte, die ein Testteilnehmer zu Gesicht bekommen, lassen sich hier für die gesamte Instanz ändern. Diese lassen sich dann wiederum [für einzelne Studien oder Booklets ändern] (https://iqb-berlin.github.io/tba-info/Testcenter/Studiendurchfuehrung/Studienverhalten_konfigurieren.html)."
  },
  {
    "objectID": "intro/install/configuration.html#eine-warnung-auf-die-startseite-schalten",
    "href": "intro/install/configuration.html#eine-warnung-auf-die-startseite-schalten",
    "title": "Testcenter Konfiguration",
    "section": "Eine Warnung auf die Startseite schalten",
    "text": "Eine Warnung auf die Startseite schalten\nEs lässt sich für eine definierte Zeit eine Warnung auf die Startseite schalten."
  },
  {
    "objectID": "intro/install/configuration.html#das-aussehen-der-anwendung-grundsätzlich-anpassen",
    "href": "intro/install/configuration.html#das-aussehen-der-anwendung-grundsätzlich-anpassen",
    "title": "Testcenter Konfiguration",
    "section": "Das Aussehen der Anwendung grundsätzlich anpassen",
    "text": "Das Aussehen der Anwendung grundsätzlich anpassen\nHintergrundfarbe, Name, Logo u. Ä. der Anwendung lässt sich verändern. Bei den Farben sind sämtliche CSS-Farben und sogar CSS-Farbverläufe usw. möglich."
  },
  {
    "objectID": "intro/install/configuration.html#die-fehlerreport-funktion-konfigurieren",
    "href": "intro/install/configuration.html#die-fehlerreport-funktion-konfigurieren",
    "title": "Testcenter Konfiguration",
    "section": "Die Fehlerreport-Funktion konfigurieren",
    "text": "Die Fehlerreport-Funktion konfigurieren\nWenn immer im Testcenter eine Fehlermeldung auftaucht, gibt es die Möglichkeit, einen ausführlichen Report anzuzeigen, und herunterzuladen. Wird dieser an die Entwickler gesendet, haben diese eine Chance das Problem zu beheben. Eine Testcenterinstanz kann so konfiguriert werden, dass Fehlerreports auch auf Knopfdruck direkt eingesendet werden können. Betreiber eines Testcenters können auf diese Weise auftretende Fehler geordnet tracken.\nAls Bugtracker kann derzeit nur GitHub angeschlossen werden. Dazu kann der Super-Admin entsprechend ein Token und ein Repository angeben. Das Testcenter selbst wird bewusst nicht als BugTracker verwendet, sondern ein externer Service, damit Fehlerberichte auch bei nicht erreichbarem Testcenter-Server gesendet werden können.\n\nGitHub als BugTracker konfigurieren\n\nein GitHub Projekt mit aktivierten issues auf GitHub.com wird benötigt\nes ist im Feld Ziel-Repository das Repository in der üblichen Schreibweise {Organisatiosname}/{Repositoryname} anzugeben, z.B. iqb-berlin/bugreports\nAuf GitHub muss ein Token erzeugt werden das auf dieses Repository Zugriff hat und folgendes Recht hat: Read and Write access to issues. Dieses ist bei GitHub-Token einzutragen."
  },
  {
    "objectID": "intro/install/index.html",
    "href": "intro/install/index.html",
    "title": "IQB-Webanwendungen installieren",
    "section": "",
    "text": "Sämtliche Programmierungen des IQB sind Open Source und öffentlich online verfügbar. Es ist nicht nötig, das IQB zu kontaktieren, sondern man folgt den Anleitungen.\nAlle Webanwendungen des IQB sind serverbasiert, da sie online genutzt werden sollen. Man benötigt also einen Server und Basiskenntnisse dazu.\nAllgemeine Hinweise:\nflowchart LR\n    A(Aufgabenentwicklung&lt;br/&gt;&lt;b&gt;IQB-Studio&lt;/b&gt;)\n    B(Testdurchführung&lt;br/&gt;&lt;b&gt;IQB-Testcenter&lt;/b&gt;)\n    C(Kodierung&lt;br/&gt;&lt;b&gt;IQB-Kodierbox&lt;/b&gt;)\n    style A fill:#adf, stroke:#037\n    style B fill:#adf, stroke:#037\n    style C fill:#adf, stroke:#037\n    A --&gt; B\n    B --&gt; C"
  },
  {
    "objectID": "intro/install/index.html#iqb-studio",
    "href": "intro/install/index.html#iqb-studio",
    "title": "IQB-Webanwendungen installieren",
    "section": "IQB-Studio",
    "text": "IQB-Studio\n\nInstallationsanleitung auf GitHub\nPortalbeschreibung des Super-Admin-Accounts"
  },
  {
    "objectID": "intro/install/index.html#iqb-testcenter",
    "href": "intro/install/index.html#iqb-testcenter",
    "title": "IQB-Webanwendungen installieren",
    "section": "IQB-Testcenter",
    "text": "IQB-Testcenter\n\nInstallationsanleitung auf GitHub\nHinweise zur Konfiguration bei/nach der Installation\nDurchführung als Offline-Szenario\nStrategien zum Lasttest\nRelease-Plan\nDiskussion zur Datensicherheit\nZu automatischen Software-Tests"
  },
  {
    "objectID": "intro/install/index.html#iqb-kodierbox",
    "href": "intro/install/index.html#iqb-kodierbox",
    "title": "IQB-Webanwendungen installieren",
    "section": "IQB-Kodierbox",
    "text": "IQB-Kodierbox\nDie Webanwendung IQB-Kodierbox befindet sich in Entwicklung. Sobald die Erprobungen weiter fortgeschritten sind, finden Sie an dieser Stelle weitere Informationen."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Computerbasiertes Testen am IQB",
    "section": "",
    "text": "hghgghg\n\n\n\n Zurück nach oben",
    "crumbs": [
      "Start"
    ]
  },
  {
    "objectID": "Schulungsmaterial/index.html",
    "href": "Schulungsmaterial/index.html",
    "title": "Schulungsmaterial 5",
    "section": "",
    "text": "Warnung\n\n\n\nDie nachfolgenden Videos werden derzeit überarbeitet. Sie geben zwar einen groben Einblick in die Arbeitsweise, die Informationen sind jedoch teilweise überholt.\n\n\n\n\n\n\n\n\n   \n     \n     \n       Sortieren nach\n       Voreinstellung\n         \n          Titel\n        \n         \n          Beschreibung\n        \n         \n          Autor:in\n        \n         \n          Datum - Datum (aufsteigend)\n        \n         \n          Datum - Neueste\n        \n         \n          Kategorien\n        \n         \n          link\n        \n         \n          license\n        \n         \n          video-length\n        \n     \n  \n    \n      \n      \n    \n\n\n\n    \n        \n            \n                Aspect-Editor\n            \n        \n        \n            \n                Grundlegende Funktionen und Bedienung des Editors (Stimulus anpassen, Offene Items anpassen etc.)\n                \n                    \n                        \n                            Editor\n                        \n                    \n                        \n                            Einführung\n                        \n                    \n                        \n                            Video\n                        \n                    \n                        \n                            Aspect\n                        \n                    \n                \n            \n            \n                 \n                    \n                        \n                        Video HU-Moodle\n                    \n                \n                \n                Autor*in: Semiha Yilmaz\n                Datum: 01.09.2022\n                Lizenz: \n                    \n                        CC0\n                    \n                \n            \n        \n    \n\n    \n        \n            \n                Einführung Studio\n            \n        \n        \n            \n                Struktur, Aufbau und Funktionen; Aufbau und Funktion des integrierten Editors; Kodierung und Kommentare\n                \n                    \n                        \n                            Editor\n                        \n                    \n                        \n                            Einführung\n                        \n                    \n                        \n                            Video\n                        \n                    \n                        \n                            Studio\n                        \n                    \n                \n            \n            \n                 \n                    \n                        \n                        Video HU-Moodle\n                    \n                \n                \n                Autor*in: Semiha Yilmaz\n                Datum: 01.09.2022\n                Lizenz: \n                    \n                        CC0\n                    \n                \n            \n        \n    \n\n    \n        \n            \n                Testdateien \n            \n        \n        \n            \n                Dateien zur Studien-, Testheft- und Aufgaben-Definition\n                \n                    \n                        \n                            Einführung\n                        \n                    \n                        \n                            Testcenter\n                        \n                    \n                        \n                            Studio\n                        \n                    \n                        \n                            Testdateien\n                        \n                    \n                        \n                            Video\n                        \n                    \n                \n            \n            \n                 \n                    \n                        \n                        Video HU-Moodle\n                    \n                \n                \n                    Länge: 04:33\n                \n                Autor*in: Tobias Huste\n                Datum: 01.05.2022\n                Lizenz: \n                    \n                        CC0\n                    \n                \n            \n        \n    \n\n    \n        \n            \n                Testleitungskonsole\n            \n        \n        \n            \n                Anlegen, Funktionen und Bedienung einer Testleitungskonsole\n                \n                    \n                        \n                            Testcenter\n                        \n                    \n                        \n                            Einführung\n                        \n                    \n                        \n                            Video\n                        \n                    \n                        \n                            Testleitungskonsole\n                        \n                    \n                \n            \n            \n                 \n                    \n                        \n                        Video HU-Moodle\n                    \n                \n                \n                Autor*in: Jenny Kölm\n                Datum: 01.09.2020\n                Lizenz: \n                    \n                        CC0\n                    \n                \n            \n        \n    \n\n\n\nKeine Treffer\n\n Zurück nach oben"
  },
  {
    "objectID": "intro/index.html",
    "href": "intro/index.html",
    "title": "Einführung",
    "section": "",
    "text": "Die Domäne der hier besprochenen Webanwendungen sind Lernstandserhebungen mit einer hohen Zahl an Testpersonen. Diese Erhebungen sind Teil des datengestützten nationalen Bildungsmonitorings und dienen der Unterrichtsentwicklung auf Klassenebene.\n\n\n\n Zurück nach oben",
    "crumbs": [
      "Einführung"
    ]
  },
  {
    "objectID": "intro/install/releases.html",
    "href": "intro/install/releases.html",
    "title": "Release Plan",
    "section": "",
    "text": "direkt zu aktuellen Terminen\nUnter einem Release ist hier die Veröffentlichung einer neuen Version des Testcenters zu verstehen. Beim Einsatz des Testcenters z. B. in aufwändigen Server-Umgebungen ist es wichtig zu wissen, zu welchen Zeitpunkten Releases mit welchen Eigenschaften erfolgen. Erst auf dieser Grundlage kann man ergänzende Maßnahmen wie Sicherheits-/Penetrationstests und Lasttests planen."
  },
  {
    "objectID": "intro/install/releases.html#release-pfade",
    "href": "intro/install/releases.html#release-pfade",
    "title": "Release Plan",
    "section": "Release-Pfade",
    "text": "Release-Pfade\n\nDer Ort der Veröffentlichung ist GitHub.com.\nEs ist die Markierung Latest gesetzt für die letzte sog. stabile Version. Diese sollten alle installieren, die neu das IQB-Testcenter auf eigener Infrastruktur nutzen möchten. Auf diese Version beziehen sich Dokumentation und Handreichungen.\nJede Veröffentlichung einer neuen stabilen Version erhält einen ausführlichen Text, der die Änderungen gegenüber der Vorversion beschreibt.\nAlle Versionen mit einem Suffix gelten als Vorabversion und erhalten die Markierung Pre-release.\nSollte in besonderen Fällen Patches für eine frühere, nicht als Latest markierte Version veröffentlicht werden, ist diese Version weder als Pre-release noch als Latest markiert.\nBei der Veröffentlichung einer Vorabversion wird nur kurz beschrieben, welchen Zweck sie hat.\nÄltere Hauptversionen werden nicht weiterentwickelt und erhalten keine Patches. In besonderen Fällen und in Abstimmung mit dem IQB kann davon abgewichen werden.\nStabile Versionen können Funktionen enthalten, die noch in der Entwicklung sind. Diese sind als Preview in der Release-Dokumentation markiert und sind nach der Installation bzw. dem Update deaktiviert. Über ein dokumentiertes Verfahren werden sie aktiviert bzw. zugänglich. Diesen Weg geht das Entwicklerteam, wenn es frühzeitig Rückmeldungen aus dem Nutzerkreis für neue Funktionen erhalten möchte oder eine bestimmte Änderung, für die eine Hauptversion erforderlich wäre, früher verfügbar machen möchte.\nFunktionen, die mit der nächsten Hauptversion entfallen oder grundlegend überarbeitet werden, können in einem stabilen Release als deprecated markiert werden. Diese Markierung erfolgt im Text des Releases."
  },
  {
    "objectID": "intro/install/releases.html#termine-und-planung",
    "href": "intro/install/releases.html#termine-und-planung",
    "title": "Release Plan",
    "section": "Termine und Planung",
    "text": "Termine und Planung\n\nEinmal im Jahr im März wird eine Hauptversion veröffentlicht.\nHauptversionen werden mit den beabsichtigten Funktionen mindestens ein halbes Jahr vorab angekündigt (s. u.).\nMit der neuen Hauptversion wird die jährliche VERA-Pilotierung durchgeführt (entspr. Umstellungsplan beginnend 2026 mit Primarstufe).\nFunktions-Updates werden nach Bedarf und nach verfügbaren Ressourcen veröffentlicht.\nFunktions-Updates werden mindestens 1 Monat vorab angekündigt (s. u.)."
  },
  {
    "objectID": "intro/install/releases.html#nächste-hauptversion-16",
    "href": "intro/install/releases.html#nächste-hauptversion-16",
    "title": "Release Plan",
    "section": "Nächste Hauptversion 16",
    "text": "Nächste Hauptversion 16\n\nTermin: 1.3.2025\nGeplante Änderungen:\n\nDas Testcenter kann in einer Kubernetes-Umgebung eingesetzt werden. Dies führt zu Änderungen in der Auslieferung.\n\nVorabversion am 20.12.2024: Hier ist die Kubernetesfähigkeit grundsätzlich hergestellt (Gewährleistung der Ausfallsicherheit über mehrere Server hinweg), es können aber noch keine Container mehrfach gefahren werden\nVorabversion am 1.2.2025: Gewünschte Funktionsfähigkeit hergestellt, Testungen beginnen\nAnmerkung: Das IQB wird mit dieser Version ausführliche Lasttests durchführen und daraus Empfehlungen ableiten, ob und wie mit dem Einsatz von Kubernetes Nutzeffekte erreicht werden können."
  },
  {
    "objectID": "intro/install/releases.html#nächstes-funktions-update",
    "href": "intro/install/releases.html#nächstes-funktions-update",
    "title": "Release Plan",
    "section": "Nächstes Funktions-Update",
    "text": "Nächstes Funktions-Update\n\nbisher ohne Termin\nGeplante Änderungen:\n\nDie Flexibilität des System-Checks wird erhöht. Es können dann mehrere Units und damit Player abgetestet werden und die Ermittlung des Netzwerk-Speeds bildet den Download einer konkreten Erhebung nach.\nDie Erfassung einer analogen Leistung (Papier) durch die Testleitung (Foto mit Tablet) ist möglich."
  },
  {
    "objectID": "intro/install/releases.html#ausblick",
    "href": "intro/install/releases.html#ausblick",
    "title": "Release Plan",
    "section": "Ausblick",
    "text": "Ausblick\n\nFür die nächste Hauptversion 17 im März 2026 sind folgende Änderungen geplant:\n\nUmstellung der Admin-Anmeldung auf OpenID Connect. Die Kommunikation mit Servern wird über ein JWT-Application-Token gewährleistet.\nIm Jahr 2025 wird ein neues UI/UX des Testcenters entwickelt und mit der Version 17 implementiert. Es ändern sich in diesem Zusammenhang einige Endpunkte der API.\nDas IQB-Testcenter wird im einem weiteren Länderprojekt StarS als Teil der Architektur genutzt. Eventuell dafür erforderliche Anpassungen sind dann ebenfalls Teil der Version 17."
  },
  {
    "objectID": "intro/install/offline.html",
    "href": "intro/install/offline.html",
    "title": "Offline-Szenario",
    "section": "",
    "text": "Das IQB-Testcenter ist eine Webanwendung, d. h. sie muss auf einem Server installiert werden, der dann durch die Webbrowser der Testpersonen erreichbar ist. Sollte eine Schule keine oder eine zu schlechte Internet-Verbindung haben, kann man als Server auch einen mitgebrachten Laptop einrichten und an einen WLAN-Access-Point anschließen (Kabel). Das Einrichten des Servers und des Access-Points ist hier beschrieben.\n\n\n\n\n\n\nHinweis\n\n\n\nDieser Guide wurde unter Ubuntu 23.04 und Debian 11 bullseye getestet.\n\n\n\nVorbereitung\n\nInstallation von Docker und Docker-Compose sowie make\nRouter im Access Point Modus\n(Optional) Installation von dnsmasq für lokalen DNS Server\n\nWenn der Router per Ethernet Kabel mit dem Server (Laptop auf dem die Testcenter Instanz laufen soll) verbunden ist, gehe auf dem Server zu Einstellungen  Netzwerk.\nUm die Wiederverwendbarkeit zu erleichtern empfehlen wir ein neues Profil für diese Verbindung anzulegen.\nDas wichtige ist, dass Details  Make available to other users und IPv4  Shared to other computers aktiviert sind.\nNach Erstellung des Profils sollte es so aussehen:\n\n\n\n\n\n\nAbbildung 1: Beispiel für Details Einstellungen\n\n\n\n\n\n\n\n\n\nAbbildung 2: Beispiel für IPv4 Einstellungen\n\n\n\n\n\nInstallation Testcenter\nDem Guide für die Installation des Testcenters folgen. Während man das Installationsskript (install.sh) ausführt, gibt es einige Schritte zu beachten.\nUnter HOSTNAME muss die IP Adresse der Verbindung zum Router eingetragen werden (in diesem Beispiel 10.42.0.1, s. Abbildung 1). Alternativ kann eine besser menschenlesbare Adresse (z.B. iqb-testcenter.lan) eingetragen werden, allerdings benötigt dieser Schritt die Auflösung der Adresse mit Hilfe eines lokalen DNS Servers.\nAußerdem sollte die Setup-Frage “Use TLS?” mit N (No) beantwortet werden.\nMan sollte den weiteren Hinweisen des Guides ebenfalls folgen. Wenn man sich bei dem Hostname für die IP Adresse entschieden hat und das Testcenter erfolgreich hochgefahren ist, dann sollten sich Clienten jetzt mit dem vom Router aufgespannten WLAN verbinden und über die http://10.42.0.1 auf das Testcenter zugreifen können. Wenn man sich für eine andere Adresse entschieden hat, dann sollte ein lokaler DNS Server eingerichtet sein.\n\n\nLokaler DNS Server\nUm einen lokalen DNS Server zu starten, können Tools wie dnsmasq oder bind verwendet werden. Dieser Guide verwendet dnsmasq.\nNach der erfolgreichen Installation muss eine Umleitungsregel für die zuvor gewählte Adresse in der Konfigurationsdatei (hier /etc/dnsmasq.confh) inzugefügt werden. Dies kann man z.B. mit nano erledigen:\nsudo nano /etc/dnsmasq.conf\nDort diese Regel hinzufügen:\naddress=/#/x.x.x.x\nFür # muss der vorher ausgewählte Hostname eingesetzt werden und für x.x.x.x die IP Adresse des Servers. Für dieses Beispiel müsste die Regel wie folgt aussehen:\naddress=/iqb-testcenter.lan/10.42.0.1\nNach dem man die Änderungen gespeichert hat, muss der DNS Server mit folgendem Befehl neugestartet werden.\nsudo systemctl restart dnsmasq.service\nSofern möglich, sollte man in den Routereinstellungen selbst noch die IP Adresse des DNS Server für die Clienten auf die IP Adresse des Servers (in diesem Fall 10.42.0.1) ändern.\n\n\n\n\n\n\nHinweis\n\n\n\nDieser lokaler DNS Server wurde in einer Umgebung getestet, in der keine Verbindung zum Internet bestand, da dies dazu führen könnte, dass der lokale DNS Server von den DNS Server der aktiven Internetverbindung überschrieben wird.\n\n\n\n\nBereinigung des Testcenters\nMöchte man die Testcenterinstallation bereinigen, so sollten folgende Befehle im Installationsverzeichnis des Testcenters ausgeführt werden:\n1make down\n2docker rm -f $(docker ps -a -q)\n3docker volume rm $(docker volume ls -q)\n4docker rmi $(docker images -a -q)\n\n1\n\nBeendet die Anwendung.\n\n2\n\nEntfernt alle Docker Container.\n\n3\n\nEntfernt alle Docker Volumes.\n\n4\n\nEntfernt dann alle Docker Images.\n\n\nDanach kann das bisherige Installationsverzeichnis gelöscht werden.\n\n\nUmgebungsvariable: TLS_ENABLED\n\n\n\n\n\n\nWarnung\n\n\n\nDas Testcenter läuft ab der Version 15 auschließlich mit TLS. Mit der Version 15.1.0 wurde es wieder ermöglicht TLS zu deaktivieren. Allerdings gab es bei den Installationsskripten der Versionen 15.1.0 bis 15.1.5 einen Fehler, so dass beim Setup des Testcenters keine Abfrage bezüglich TLS kam. In diesen Versionen muss manuell die Umgebungsvariable angepasst werden um non-tls zu ermöglichen.\n\n\nDazu im Installationsverzeichnis des Testcenters die .env Datei öffnen. Zum Beispiel mit:\nnano .env\nUnd dann den Wert der Umgebungsvariable TLS_ENABLED wie folgt setzen:\nTLS_ENABLED=no\n\n\nLange Startzeiten des Testcenters umgehen\nDas Testcenter validiert standardmäßig beim Starten alle Dateien zur Aufgaben-Definition (Unit-XML, Unit-VOUD usw.), die Testtaker-XML und Booklet-XML. Dies kann bei einer hohen Anzahl von Testheften und Zugängen für die Testpersonen zur einer sehr hohen Startzeit führen.\nDies kann mit einer manuellen Einstellung vermieden werden. Man benötigt dafür am besten zwei Konsolen für die Eingabe von Befehlen. Folgenden Befehl im Installationsordner des Testcenters durchführen:\nmake run\nIn der zweiten Konsole dann diesen Befehl ausführen:\ndocker exec -it testcenter-backend sed -i '6s/$/ --skip_read_workspace_files/' /entrypoint.sh\nNun wird beim Starten das validieren der Dateien übersprungen. Es ist wichtig, dass das Testcenter nur noch mit “make stop” heruntergefahren wird, da “make down” den Fix ungültig machen würde. Dann müsste man die vorangegangen Schritte wiederholen.\n\n\n\n\n Zurück nach oben"
  },
  {
    "objectID": "intro/install/security.html",
    "href": "intro/install/security.html",
    "title": "Datensicherheit",
    "section": "",
    "text": "Für verschiedene Institutionen oder auch Firmen gehört eine ausführliche Sicherheitsprüfung zu den Bedingungen der Installation einer Webanwendung. Für Rechenzentren der Länder beispielsweise ist durch Verwaltungsvorschriften festgelegt, dass erst nach einer Überprüfung nach dem BSI-Standard Cloud Computing C5 eine Installation freigegeben werden kann.\nDas IQB unterstützt diese Anforderungen, indem Monita zeitnah umgesetzt werden. Einige Anforderungen stehen jedoch der Funktionalität des Testcenters entgegen oder beruhen auf einem Missverständnis. Diese Punkte sind nachfolgend erläutert."
  },
  {
    "objectID": "intro/install/security.html#administratoren",
    "href": "intro/install/security.html#administratoren",
    "title": "Datensicherheit",
    "section": "Administratoren",
    "text": "Administratoren\nZur Verwaltung der Inhalte und dem Download der Antwortdaten sind personenbezogene Accounts eingerichtet. Nur ein besonders privilegierter Admin darf diese Accounts anlegen und die Kennworte ändern bzw. vergeben. Nach einer entsprechenden Einweisung stellt diese Person die erforderliche Mindestlänge usw. sicher. Technisch ist eine Mindestlänge von 7 Zeichen eingestellt.\n\n\n\n\n\n\nGeplante Weiterentwicklung\n\n\n\nDas IQB-Testcenter wird perspektivisch an eine Identitätsverwaltung über OpenID Connect angeschlossen. Damit wird die Vergabe der Kennworte ausgelagert und kann dann bis zur Zweifaktor-Authentifizierung gehen.\n\n\nSeit der Version 15.1 ist als Sicherheitsmaßnahme gegen unerlaubte Loginversuche eine 0.5s Verzögerung für aufeinanderfolgende Admin-Logins aktiviert."
  },
  {
    "objectID": "intro/install/security.html#testpersonen",
    "href": "intro/install/security.html#testpersonen",
    "title": "Datensicherheit",
    "section": "Testpersonen",
    "text": "Testpersonen\nDie Anmeldung einer Person, die einen Test oder eine Befragung ausführen soll, gilt nicht als Login. Dies ist vielmehr zu sehen wie das Füllen eines Warenkorbes ohne Account. Folgende Use Cases verhindern die übliche Sichtweise ‘Login’:\n\nEs muss durch das Testcenter abgebildet werden, dass die Personen, die sich anmelden sollen, vorher nicht bekannt sind. Dann werden dieselben Anmeldedaten an eine große Zahl von potenziellen Teilnehmer*innen geschickt (Mailingliste), und das System legt bei jeder Anmeldung eine neue Session/Person an (Modus RUN-HOT-RESTART).\nEin Test soll nur durch die Eingabe eines Link/einer Url gestartet werden können. Dann wird KEIN Kennwort vergeben.\n\nDiese Szenarien bedeuten aus der Sicht der Datensicherheit, dass eine Anmeldung einer Testperson keiner Kennwortrichtlinie unterliegen muss. Der potenzielle Datenverlust besteht auch nur in einer unbeabsichtigten Veröffentlichung von Testitems, die ggf. vertraulich bleiben sollen. Es ist kein Zugriff auf Daten anderer möglich.\nAus diesem Grund ist es auch unbedenklich, dass die Testtaker-Xml nicht verschlüsselt hochgeladen werden. Eine Anmeldeverzögerung für Testpersonen ist ebenfalls nicht erforderlich, sondern würde nur die mögliche Anzahl an Testpersonen, die sich zeitgleich anmelden können, künstlich begrenzen."
  },
  {
    "objectID": "intro/install/studio-super-admin/index.html",
    "href": "intro/install/studio-super-admin/index.html",
    "title": "System-Account im IQB-Studio",
    "section": "",
    "text": "Reiter: Nutzer*innen\nHier werden die Zugänge für das Studio eingerichtet. Auf der linken Seite ist eine Liste aller Zugänge zu sehen. Durch Betätigung der  - Schaltfläche wird ein neuer Zugang eingerichtet. Es erscheint ein Formular zur Eingabe von Metadaten zum Zugang. Hier wird unter anderem ein Passwort festgelegt und eine Mailadresse hinterlegt. Es wird außerdem festgelegt, ob der Zugang als System-Administrator*in fungieren soll. Nach dem Speichern des Formulars ist der Zugang angelegt.\n\n\n\n\n\n\nHinweis\n\n\n\nZugänge die als System-Administrator*in angelegt wurde, werden in der Liste der Zugänge mit einem Sternchen gekennzeichnet.\n\n\nZugänge können mit der  - Schaltfläche entfernt werden. Sollen Metadaten verändert werden, kann die -Schaltfläche verwendet werden. Bspw. könnte hier die Mailadresse nachträglich geändert werden oder eine vorherige Festlegung als System-Administrator*in wieder rückgängig gemacht werden.\n\n\n\n\n\n\nHinweis\n\n\n\nSoll ein Zugang entfernt oder Metadaten angepasst werden, ist der entsprechende Zugang zuvor zu markieren.\n\n\nGanz rechts ist die Liste aller Bereichsgruppen zu sehen. Ist ein Zugang markiert, kann dem Zugang eine Bereichsgruppe zugeordnet werden. Damit diese Änderungen nicht verloren gehen, muss mit der  - Schaltfläche oben rechts gespeichert werden.\n\n\n\n\n\n\nHinweis\n\n\n\nWird einem Zugang eine Bereichsgruppe zugeordnet, besitzt dieser Zugang die Berechtigung auf die Bereichsgruppen-Einstellungen zuzugreifen. Dieser Zugang ist dann Bereichsgruppen-Administrator*in.\n\n\n\n\nReiter: Bereichsgruppen\nLinks ist eine Liste aller Bereichsgruppen zu sehen. Mithilfe der  - Schaltfläche kann eine neue Bereichsgruppe angelegt werde. Der Name der Bereichsgruppe sollte sich dabei günstigerweise an dem Zweck der Studie orientieren. Durch Markierung kann eine Bereichsgruppe gelöscht werden oder umbenannt werden. Außerdem kann mit Hilfe der  - Schaltfläche das Metadaten-Profil der Bereichsgruppe angepasst werden.\nEs finden sich zwei weitere Schaltfläche. Diese können genutzt werden, um separate Dateien zur Übersicht der Module und der Arbeitsbereiche in den Bereichsgruppen zu generieren. Das verschafft System-Administrator*innen einen zusätzlichen Überblick über nicht mehr genutzte Arbeitsbereiche und Module. Auf diese Weise ist es möglich hin und wieder ältere Stände zu entfernen und somit die Datenlast für das Studio zu reduzieren.\n\n\nReiter: Module\nEs ist eine Liste aller Module für Editor, Schemer und Player zu sehen. Mit der  - Schaltfläche können neue Module geladen werden. Module können erst gelöscht werden, nachdem sie zuvor markiert wurden.\n\n\nReiter: Einstellungen\nHier können Texte zu Wartungsarbeiten (Warnungen) auf der Anmeldeseite und Texte im Impressum verändert werden. Außerdem kann das Layout der Anwendung angepasst werden.\nDa das Studio neben der Unit-XML auch optional eine Booklet-XML und eine Testtaker-XML ausgeben kann, kann in den Einstellungen festgelegt werden, welche Schema-Definition (Xsd) zur Validierung dieser XML-Dateien verwendet werden soll.\n\n\n\n\n\n\nHinweis\n\n\n\nZu jeder Testcenter-Version gehört eine Schema-Definition (Xsd) mit gleicher Versionsnummer.\n\n\nFür die Kodierung können im JSON-Format Missing Profiles angelegt werden.\n\n\nReiter: Pakete\nHier können Pakete bswp. für GeoGebra geladen werden. Damit GeoGebra-Elemente in der Vorschau des Editors sichtbar sind, muss das entsprechende Paket vorhanden sein.\n\n\n\n\n Zurück nach oben"
  }
]